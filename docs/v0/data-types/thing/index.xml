<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thing on ThingsDB documentation</title>
    <link>https://docs.thingsdb.net/v0/data-types/thing/</link>
    <description>Recent content in thing on ThingsDB documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://docs.thingsdb.net/v0/data-types/thing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>del</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/del/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/del/</guid>
      <description>Delete a property from a thing.
While almost all function on things are also available on Type instances, this one is not. This is because a Type instance has a fixed set of properties and so you are not allowed to delete one of them on a single instance. Use mod_type() instead, to delete the property from all instances if this is what you want.
 This function generates an event.</description>
    </item>
    
    <item>
      <title>filter</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/filter/</guid>
      <description>When this method is used on a thing, then a new thing will be returned with only the properties that pass the test.
This function does not generate an event.
Function thing.filter(callback)
Arguments The callback argument must be a closure which input values depend on the type the method is called on.
   Iterable Arguments Description     thing name, value Iterate over the thing properties.</description>
    </item>
    
    <item>
      <title>get</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/get/</guid>
      <description>Return the value of a property on a thing by a given property name. If the property is not found then the return value will be nil, unless an alternative return value is given.
This function does not generate an event.
Function thing.get(name [, alt])
Arguments    Argument Type Description     name str (required) Name of the property where to return the value for.   alt any (optional) Optional return value.</description>
    </item>
    
    <item>
      <title>has</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/has/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/has/</guid>
      <description>Determines if a thing has a given property.
This function does not generate an event.
Function thing.has(name)
Arguments    Argument Type Description     name str (required) Name of the property to check.    Return value Returns true when the given propery name is found and otherwise false.
Example  This code shows an example use case of has():
 tmp = {name: &#39;Iris&#39;}; /* Check if `tmp` has a property `name` */ tmp.</description>
    </item>
    
    <item>
      <title>id</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/id/</guid>
      <description> Returns the id of a thing or nil if the thing is not stored.
This function does not generate an event.
Function thing.id()
Arguments None
Return value Returns id of a thing or nil when the thing is not stored.
Example  This code uses id() to return a collection id:
 .id(); // Returns the collection id   Example return value in JSON format
 3  </description>
    </item>
    
    <item>
      <title>keys</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/keys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/keys/</guid>
      <description>keys Returns an array with all the property names of a thing. The same could be returned using map so the following statement is true:
.keys() == .map(|k| k)
Although the keys() and map() functions in the example above will return an array with the same order, the order of keys in the array is not guaranteed and may be different each time you run the query.
 This function does not generate an event.</description>
    </item>
    
    <item>
      <title>len</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/len/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/len/</guid>
      <description> Returns the number of items in a thing.
This function does not generate an event.
Function thing.len()
Arguments None
Return value Returns the number of items in a thing.
Example  This code uses len() to return the number of items in a thing:
 {name: &#39;Iris&#39;, age: 6}.len();   Return value in JSON format
 2  </description>
    </item>
    
    <item>
      <title>map</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/map/</guid>
      <description>Iterate over all properties on a thing.
Be aware that the order when iterating over a thing is not guaranteed.
 This function does not generate an event.
Function thing.map(callback)
Arguments Explanation of the callback argument:
   Iterable Arguments Description     thing name, value Iterate over the thing properties. Both name and value are optional.    Return value A new list with each element being the result of the callback function.</description>
    </item>
    
    <item>
      <title>set</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/set/</guid>
      <description>Creates a new property on a thing. If the property already existed then the old property will be overwritten. This function is equal to an assignment except that it can be used when the name of the property is dynamic.
This function generates an event.
Function thing.set(name, value)
Arguments    Argument Type Description     name str (required) The name of the property to set.   value any (required) The value which will be assigned to the property.</description>
    </item>
    
    <item>
      <title>unwatch</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/unwatch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/unwatch/</guid>
      <description> Stop watching for mutations on a thing. This method returns nil and triggers a stop event, only when the thing was being watched.
This function does not generate an event.
Function thing.unwatch()
Arguments None
Return value Returns nil.
Example  This code shows how to use unwatch():
 .unwatch();   Return value in JSON format:
 null  </description>
    </item>
    
    <item>
      <title>values</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/values/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/values/</guid>
      <description>Returns an list with all the property values of a thing. The same could be returned using map so the following statement is true:
(.values() == .map(|_, v| v))
Although the values() and map() in the example above will return an list with the same order, the order of values in the list is not guaranteed and may be different each time you run the query.
 This function does not generate an event.</description>
    </item>
    
    <item>
      <title>watch</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/watch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/watch/</guid>
      <description>Subscribe for watching mutations on a stored thing. If this function is called on a thing which is not stored, and therefore has no #ID, then a value_err() is raised. This method returns nil but always triggers an init event, even when an earlier call to this function has been made.
This function only works with socket connections. When using this function with an HTTP API request, it has no effect.</description>
    </item>
    
    <item>
      <title>wrap</title>
      <link>https://docs.thingsdb.net/v0/data-types/thing/wrap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/data-types/thing/wrap/</guid>
      <description>Wrap a thing with a Type.
For a more advanced example using wrap() and unwrap() see .
Function thing.wrap(type)
Arguments    Argument Arguments Description     type str Type name to wrap the thing with.    Return value A wrapped thing.
Example  This code shows an example using wrap():
 // Create a Type to return just an email field. set_type(&#39;_Email&#39;, {email: &#39;str&#39;}); // Store a thing .</description>
    </item>
    
  </channel>
</rss>