<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ThingsDB API on ThingsDB documentation</title>
    <link>https://docs.thingsdb.net/v0/thingsdb-api/</link>
    <description>Recent content in ThingsDB API on ThingsDB documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://docs.thingsdb.net/v0/thingsdb-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>collection_info</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/collection_info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/collection_info/</guid>
      <description>Returns information about a specific collection.
This function requires READ privileges on the requested collection, or MODIFY privileges on the @thingsdb scope.
This function does not generate an event.
Function collection_info(name_or_id);
Arguments    Argument Type Description     name_or_id str/int Name or Id of the collection    Return value Returns info about the collection.
Example  Returns information about collection stuff:
 collection_info(&#39;stuff&#39;);  Example return value in JSON format</description>
    </item>
    
    <item>
      <title>collections_info</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/collections_info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/collections_info/</guid>
      <description>Returns collection information about all collections in ThingsDB.
See the collection_info() function documentation for an example of the exposed collection information.
If the user has no MODIFY permissions on the @thingsdb scope, then only the collections where the user has at least READ privileges are included in the result.
 This function does not generate an event.
Function collections_info()
Arguments None
Return value List with collection info about all collections in ThingsDB.</description>
    </item>
    
    <item>
      <title>del_collection</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/del_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/del_collection/</guid>
      <description>Delete a collection.
This function generates an event.
Function del_collection(name);
Arguments    Argument Type Description     name str (required) Name of the collection to delete.    Return value Returns nil when successful. A lookup_err() is raised if the collection does not exist.
Example  This code will delete collection stuff:
 // Delete collection `stuff` del_collection(&#39;stuff&#39;); </description>
    </item>
    
    <item>
      <title>del_expired</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/del_expired/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/del_expired/</guid>
      <description>Delete all expired tokens.
This function requires GRANT privileges on the @thingsdb scope.
 This function generates an event.
Function del_expired();
Arguments None
Return value Returns nil.
Example  This code will delete all expired tokens:
 // Delete all expired tokens del_expired(); </description>
    </item>
    
    <item>
      <title>del_node</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/del_node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/del_node/</guid>
      <description>Delete a node from ThingsDB.
Before deleting a node, the node must be offline. As long is the node is active, you are not allowed to delete the node. See shutdown for shutting down a node by using a query.
 This function generates an event.
Function del_node(node_id);
Arguments    Argument Type Description     node_id int (required) Id of the node to delete.    Return value Returns nil when successful.</description>
    </item>
    
    <item>
      <title>del_token</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/del_token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/del_token/</guid>
      <description>Delete a token.
This function requires GRANT privileges on the @thingsdb scope unless the given token belongs to the logged on user. In the latter case, only MODIFY privileges are required.
 This function generates an event.
Function del_token(key);
Arguments    Argument Type Description     key str (required) Token key to delete.    Return value Returns nil when successful. A lookup_err() is raised if the token is not found.</description>
    </item>
    
    <item>
      <title>del_user</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/del_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/del_user/</guid>
      <description>Delete a user. It is not possible to delete your own user account and a bad_data_err() will be raised in case you try to. Any tokens associated with the user will also be deleted.
This function requires GRANT privileges on the @thingsdb scope.
 This function generates an event.
Function del_user(username);
Arguments    Argument Type Description     username str (required) Username of the user to delete.</description>
    </item>
    
    <item>
      <title>grant</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/grant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/grant/</guid>
      <description>Grant, collection or general, privileges to a user. Access to a user is provided by setting a bit mask to either the @node, @thingsdb or a @collection scope.
To use this function, at least MODIFY privileges on the @thingsdb scope and GRANT privileges on the target scope are required.
It is not possible to set privileges on a specific node scope. Therefore scope @node will apply to all nodes in ThingsDB.</description>
    </item>
    
    <item>
      <title>has_collection</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/has_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/has_collection/</guid>
      <description>Determines if a collection exists in ThingsDB.
This function does not generate an event.
Function has_collection(name_or_id)
Arguments    Argument Type Description     name_or_id str/int (required) Collection name or id to check.    Return value Returns true if the collection exists and otherwise false.
Example  This code shows an example use case of has_collection():
 has_collection(&#39;stuff&#39;);  Return value in JSON format
 true </description>
    </item>
    
    <item>
      <title>has_node</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/has_node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/has_node/</guid>
      <description>Determines if a node exists in ThingsDB.
This function does not generate an event.
Function has_node(id)
Arguments    Argument Type Description     id int (required) Node id to check.    Return value Returns true if a node with a given id exists and otherwise false.
Example  This code shows an example use case of has_node():
 has_node(0);  Return value in JSON format</description>
    </item>
    
    <item>
      <title>has_token</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/has_token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/has_token/</guid>
      <description>Determines if a token exists in ThingsDB.
This function requires GRANT privileges on the @thingsdb scope.
 This function does not generate an event.
Function has_token(key)
Arguments    Argument Type Description     key str (required) Token key to check.    Return value Returns true if the token exists and otherwise false.
Example  This code shows an example use case of has_token():
 has_token(&#39;XXXXXXXXXXXXXXXXXXXXXX&#39;);  Return value in JSON format</description>
    </item>
    
    <item>
      <title>has_user</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/has_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/has_user/</guid>
      <description>Determines if a user exists in ThingsDB.
This function requires GRANT privileges on the @thingsdb scope.
 This function does not generate an event.
Function has_user(username)
Arguments    Argument Type Description     username str (required) User to check.    Return value Returns if true the user exists and otherwise false.
Example  This code shows an example use case of has_user():
 has_user(&#39;admin&#39;);  Return value in JSON format</description>
    </item>
    
    <item>
      <title>new_collection</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/new_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/new_collection/</guid>
      <description>Create a new collection.
This function generates an event.
Function new_collection(name);
Arguments    Argument Type Description     name str (required) Name of the new collection.    The user who has created the collection will automatically receive full access rights to the new collection. Use grant to give other users access to the collection.
 Return value Returns the new collection id if successful. A lookup_err() is raised if the collection already exists.</description>
    </item>
    
    <item>
      <title>new_node</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/new_node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/new_node/</guid>
      <description>Adds a new node to ThingsDB. Nodes are used for scaling and high availability.
Before using this command, make sure another node is started and waiting for a join. This can be done by starting thingsdb with the --secret argument, for example:
$ thingsdb --secret &amp;#34;my-one-time-serect&amp;#34; Or, alternatively you may use an environment variable
$ thingsdb --secret &amp;#34;my-one-time-serect&amp;#34; Next, you will see something like this:
Waiting for an invite from a node to join ThingsDB.</description>
    </item>
    
    <item>
      <title>new_token</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/new_token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/new_token/</guid>
      <description>Adds a new token for a given user. An optional expiration time may be given; after this time the token cannot be used anymore. Use del_expired to cleanup expired tokens. The expiration time may be given as a UNIX time-stamp in seconds or a date/time string.
Some valid date/time strings:
 2021-01-01 2023-02-06 14:30 2023-07-05T13:23:20+01:00  Expiration dates in the past are not allowed an will raise a bad_data_err() error.</description>
    </item>
    
    <item>
      <title>new_user</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/new_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/new_user/</guid>
      <description>Creates a new user to ThingsDB. The new user is created without a password, token and access privileges. You probably want to set a password or add a new token, and assign some privileges using grant(&amp;hellip;).
This function requires GRANT privileges on the @thingsdb scope.
 This function generates an event.
Function new_user(user);
Arguments    Argument Type Description     user str (required) Username, between 1 and 128 graphical characters.</description>
    </item>
    
    <item>
      <title>rename_collection</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/rename_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/rename_collection/</guid>
      <description>Rename a collection.
This function generates an event.
Function rename_collection(current_name, new_name);
Arguments    Argument Type Description     current_name str (required) Current collection name.   new_name str (required) New name for the collection.    Return value Returns nil when successful.</description>
    </item>
    
    <item>
      <title>rename_user</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/rename_user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/rename_user/</guid>
      <description>Rename a user.
This function requires GRANT privileges on the @thingsdb scope.
 This function generates an event.
Function rename_user(current_name, new_name);
Arguments    Argument Type Description     current_name str (required) Current user name.   new_name str (required) New name for the user.    Return value Returns nil when successful.</description>
    </item>
    
    <item>
      <title>revoke</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/revoke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/revoke/</guid>
      <description>Revoke, collection or general, privileges from a user. See grant for more information on how access privileges can be set for a user.
To use this function, at least MODIFY privileges on the @thingsdb scope and GRANT privileges on the target scope are required.
This function generates an event.
Function revoke(target, user, mask);
Arguments    Argument Type Description     target int/raw Can be either the @node, @thingsdb, or a @collection scope.</description>
    </item>
    
    <item>
      <title>set_password</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/set_password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/set_password/</guid>
      <description>Change a user&amp;rsquo;s password. This function can also be used to remove an existing password by using nil as the new password.
Passwords must contain 1 to 128 printable characters.
This function requires GRANT privileges on the @thingsdb scope when a username other then the logged in user is given as argument. For the currently logged in user, MODIFY privileges on the @thingsdb scope are sufficient.
 This function generates an event.</description>
    </item>
    
    <item>
      <title>user_info</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/user_info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/user_info/</guid>
      <description>Returns information about a user. If no argument is given, this function will return information about the currently logged in user.
This function requires GRANT privileges on the @thingsdb scope when a username other then the logged in user is given as argument. For the currently logged in user, READ privileges on the @thingsdb scope are sufficient.
 This function does not generate an event.
Function user_info([username]);
Arguments    Argument Type Description     username str (optional) Name of the user    Return value Returns info about the user.</description>
    </item>
    
    <item>
      <title>users_info</title>
      <link>https://docs.thingsdb.net/v0/thingsdb-api/users_info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.thingsdb.net/v0/thingsdb-api/users_info/</guid>
      <description>Returns user information about all users in ThingsDB.
See the user_info() function documentation for an example of the exposed user information.
This function requires GRANT privileges on the @thingdb scope since it exposes user access and token information.
This function does not generate an event.
Function users_info()
Arguments None
Return value List with user info about all users in ThingsDB.</description>
    </item>
    
  </channel>
</rss>